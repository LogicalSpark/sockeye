# This Dockerfile will build a Sockeye image that uses MKL, and Intel Python for
# top CPU performance.

# Ubuntu base image
FROM ubuntu:16.04

# UTF-8 default encoding
RUN apt-get update && apt-get install -y locales
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8
ENV LC_ALL en_US.UTF-8

# System packages
RUN apt-get update && apt-get install -y \
    cmake \
    cpio \
    git \
    libgoogle-perftools-dev \
    libsparsehash-dev \
    libunwind-dev \
    pkg-config \
    wget

# Local installs
ENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/usr/local/lib
ENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/usr/local/lib64

# MKL
ENV MKL_VERSION l_mkl_2018.1.163
RUN cd /opt && \
    wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12414/${MKL_VERSION}.tgz && \
    tar xf ${MKL_VERSION}.tgz && \
    cd ${MKL_VERSION} && \
    sed -i -e "s/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g" silent.cfg && \
    bash install.sh -s silent.cfg && \
    rm -rf /opt/${MKL_VERSION}.tgz /opt/${MKL_VERSION}
ENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/opt/intel/compilers_and_libraries_2018.2.199/linux/compiler/lib/intel64_lin

# Intel Python3
ENV PYTHON_VERSION l_python3_pu_2018.1.023
RUN cd /opt && \
    wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12430/${PYTHON_VERSION}.tgz && \
    tar xf ${PYTHON_VERSION}.tgz && \
    cd ${PYTHON_VERSION} && \
    sed -i -e "s/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g" silent.cfg && \
    bash install.sh -s silent.cfg && \
    rm -rf /opt/${PYTHON_VERSION}.tgz /opt/${PYTHON_VERSION}
ENV PATH ${PATH}:/opt/intel/intelpython3/bin
ENV PKG_CONFIG_PATH ${PKG_CONFIG_PATH}:/opt/intel/intelpython3/lib/pkgconfig
ENV LD_LIBRARY_PATH $${LD_LIBRARY_PATH}:/opt/intel/intelpython3/lib

# MXNet Python package with MKL
ENV MXNET_VERSION apache-mxnet-src-1.1.0-incubating
ENV MXNET_URL https://github.com/apache/incubator-mxnet/releases/download/1.1.0/apache-mxnet-src-1.1.0-incubating.tar.gz
RUN cd /opt && \
    wget ${MXNET_URL} && \
    tar xf ${MXNET_VERSION}.tar.gz && \
    cd ${MXNET_VERSION} && \
    make USE_BLAS=mkl USE_INTEL_PATH=/opt/intel -j $(grep -c "processor" /proc/cpuinfo) && \
    cd python && \
    python3 setup.py build install && \
    rm -rf /opt/${MXNET_VERSION}.tar.gz /opt/${MXNET_VERSION}
# Naive engine performs best on CPUs; default performs best on GPUs
ENV MXNET_ENGINE_TYPE NaiveEngine

# Additional Sockeye Python dependencies
RUN pip install \
    pyyaml \
    tensorboard==1.0.0a6 \
    typing

# subword-nmt (byte-pair encoding)
ENV SUBWORD_VERSION 9a95f9f7400a3a891a9d8168186229a54347fc0b
RUN cd /opt && \
    git clone https://github.com/rsennrich/subword-nmt.git && \
    cd subword-nmt && \
    git checkout ${SUBWORD_VERSION}
ENV PATH ${PATH}:/opt/subword-nmt

# fast_align
ENV FAST_ALIGN_VERSION 7c2bbca3d5d61ba4b0f634f098c4fcf63c1373e1
RUN cd /opt && \
    git clone https://github.com/clab/fast_align.git && \
    cd fast_align && \
    git checkout ${FAST_ALIGN_VERSION} && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j
ENV PATH ${PATH}:/opt/fast_align/build

# This revision of Sockeye
ARG REV
RUN mkdir -p /opt/sockeye/__sockeye_tmp_build_dir
RUN echo "${REV}" > /opt/sockeye/rev
COPY ./ /opt/sockeye/
RUN cd /opt/sockeye && \
    python3 setup.py bdist_wheel -d __sockeye_tmp_build_dir && \
    pip install __sockeye_tmp_build_dir/*.whl --no-deps
